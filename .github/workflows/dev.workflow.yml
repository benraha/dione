# This is a basic workflow to help you get started with Actions

name: Dione Maven Build CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout DIONE main branch from GitHub
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Step 2 Set up JDK 1.8
        uses: actions/setup-java@v2.1.0
        with:
          java-version: '8'
          distribution: 'zulu'
          check-latest: true

      # Runs a set of commands using the runners shell
      - name: Step 3 GitHub Action Pre Deploy Phase
        run: |
           mkdir -p /home/runner/.gnupg/
           chmod 700 /home/runner/.gnupg/
           cp pubring.kbx /home/runner/.gnupg/
           cp trustdb.gpg /home/runner/.gnupg/
           cp gpg.pub /home/runner/.gnupg/
           chmod 644 /home/runner/.gnupg/pubring.kbx
           chmod 600 /home/runner/.gnupg/trustdb.gpg
           chmod 644 /home/runner/.gnupg/gpg.pub
           gpg --import  /home/runner/.gnupg/gpg.pub
           openssl enc -d -aes-256-cbc -pbkdf2 -iter ${{secrets.ITER_VALUE}} -in gpg.key.enc -out /home/runner/.gnupg/gpg.key -k ${{secrets.K_VALUE}}
           ls -l
            ls -lR /home/runner/.gnupg/
            export GPG_KEY_FILE=/home/runner/.gnupg/gpg.key
            gpg --list-secret-keys --keyid-format=long
            gpg --list-signatures --keyid-format short
            git config user.signingkey ${{ secrets.GPG_KEY_NAME }}
        env:
           GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}

      # Runs a set of commands using the runners shell
      - name: Step 4 GitHub Action Builds and Deploy Dione project
        run: |
          echo "starting build ..."
          mvn  -e  -B -V deploy -Ppublish --settings settings-ossrh.xml --file pom.xml
        env:
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
          OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
          OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}

      # Runs a set of commands using the runners shell
      - name: Step 5 GitHub Action list files in current directory
        run:
          ls -a

     # Runs a set of commands using the runners shell
      - name: Step 6 GitHub Action list files in current  target directory
        run: |
          cd target
          ls -a
